<?php

/**
 * Quote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Quote extends BaseQuote
{

	public function update($array)
	{
		if(
				$this->getDiscrate()!=$array['discrate'] or
				$this->getDiscamt()!=$array['discamt'] or
				$this->getPrice()!=$array['price'] 
			)
		{
			$this->setDiscrate($array['discrate']);
			$this->setDiscamt($array['discamt']);
			$this->setPrice($array['price'] );
			$this->calc();
		}
	}
  public function getRef()
  {
     return Doctrine_Query::create()
        ->from($this->getRefClass().' p')
        ->where('p.id = '.$this->getRefId())
        ->fetchOne();
  }
  public function calc()
  {
      $discamt=$this->getDiscamt();
      $discrate=$this->getDiscrate();
      $discrate=str_replace(","," ",$discrate);
      $discrate=str_replace(";"," ",$discrate);
      $discratearray=explode(" ",$this->getDiscrate());
      
      $total=$this->getPrice();
      foreach($discratearray as $rate)
        $total=$total*(1-($rate/100));

      $total-=$discamt;

      $this->setTotal($total);
      $this->save();
  }
	//--status functions--------------------------
	//relationship: product calc adjusts max and min product prices according to quotes
	//if cancelled, ignore
  public function isCancelled(){return $this->getIsCancelled();}
  public function cancel(){
  	$this->setIsCancelled(1);
  	$this->save();
  	if($this->getMine()==1)
	  	$this->getProduct()->calcBuyPrice();
	  else
	  	$this->getProduct()->calcSellPrice();
  }

}

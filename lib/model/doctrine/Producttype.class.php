<?php

/**
 * Producttype
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Producttype extends BaseProducttype
{
	public function update($array)
	{
		if(
				$this->getCategory1()!=$array['category1'] or
				$this->getCategory2()!=$array['category2'] or
				$this->getCategory3()!=$array['category3'] or
				$this->getCategory4()!=$array['category4'] or
				$this->getCategory5()!=$array['category5'] or
				$this->getCategory6()!=$array['category6'] or
				$this->getCategory7()!=$array['category7'] or
				$this->getCategory8()!=$array['category8'] or
				$this->getCategory9()!=$array['category9'] or
				$this->getCategory10()!=$array['category10']
			)
		{
					$this->setCategory1($array["category1"]);
					$this->setCategory2($array["category2"]);
					$this->setCategory3($array["category3"]);
					$this->setCategory4($array["category4"]);
					$this->setCategory5($array["category5"]);
					$this->setCategory6($array["category6"]);
					$this->setCategory7($array["category7"]);
					$this->setCategory8($array["category8"]);
					$this->setCategory9($array["category9"]);
					$this->setCategory10($array["category10"]);

					$this->save();
		}
	}
  public function getParent()
  {
    return Doctrine_Query::create()
      ->from('Producttype f')
      ->where('f.id='.$this->getParentId())
      ->fetchOne();
  }
  public function getChildren()
  {
    return Doctrine_Query::create()
      ->from('Producttype f')
      ->where('f.parent_id='.$this->getId())
      ->andWhere('f.id!=1') //not root
      //->orderBy('f.priority')
      ->orderBy('f.name')
      ->execute();
  }
  public function isHome()
  {
    return $this->getId()==1?true:false;
  }
  public function isRoot()
  {
    return $this->getId()==1?true:false;
  }
  public function getBreadcrumbs($action="view")
  {
    $array=array();
    $producttype=$this;
    
    if($this->getId()=="")
      $array[]=" > New Producttype";
    else
      $array[]=" > ".link_to($producttype->getname(),"producttype/".$action."?id=".$producttype->getId());
    
    while(!$producttype->isRoot())
    {
      $parent=$producttype->getParent();
      $array[]=" > ".link_to($parent->getname(),"producttype/".$action."?id=".$parent->getId());
      $producttype=$parent;
    }
    $array=array_reverse($array);

    return implode(" ",$array);
  }
  public function calcPath()
  {
    $id_array=array();
    $array=array();
    $producttype=$this;
    
    if($producttype->getname()=="")
    {
      $array[]="New Producttype";
      $id_array[]=0;
    }
    else
    {
      $array[]=$producttype->getname();
      $id_array[]=$producttype->getId();
    }

    
    while(!$producttype->isRoot())
    {
      $parent=$producttype->getParent();
      $array[]=$parent->getname();
      $id_array[]=$parent->getId();
      $producttype=$parent;
    }
    $array=array_reverse($array);
    $id_array=array_reverse($id_array);

    $this->setPath(implode(" > ",$array));
    $this->setPathIds(implode(" ",$id_array));
    $this->save();
  }
  public function calc()
  {
	  $children=$this->getChildren();
	  $this->prioritize($children);
  }
	private function prioritize($children)
	{
	  $priority=2;
	  foreach($children as $child)
	  {
	    $child->setPriority($priority);
	    $child->save();
	    $priority+=2;
	  }
	}
  public function copyProducttype()
  {
  	  $newproducttype=$this->copy();
  	  $newproducttype->save();
  	  return $newproducttype;
  }
  function __toString()
  {
      return $this->getName();
      //return $this->getPath();
  }
  function getProducts()
  {
     return Doctrine_Query::create()
      ->from('Product p')
      ->orderBy('name asc')
      ->where('p.producttype_id ='.$this->getId())
      ->execute();
  }
  function getProductsByIds($array)
  {
     return Doctrine_Query::create()
      ->from('Product p')
      ->whereIn('p.id',$array)
      ->execute();
  }
}

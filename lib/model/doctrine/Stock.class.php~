<?php

/**
 * Stock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Stock extends BaseStock
{
  public function calc($date)
  {
   
    //init vars
    $stockentrydate=MyDateTime::frommysql($date);
    $mydate=MyDateTime::frommysql($this->getDate());
  
    //do not process dates before stock date
    if($mydate->islaterthan($stockentrydate))return;
    
    //----------------------------------
    //fetch all entries on and after stockentrydate
    $entries=$this->fetchEntriesAfterDate($date);
    
    if(count($entries)==0)
    {
      $this->createFwdIfNone();
      return;
    }
    
    //compute balance for each entry after date
    $balfwd=$entries[0];
    $balance=$balfwd->getBalance();
    foreach($entries as $entry)
    {
      $balance=$balance+$entry->getQty();
      
      if($entry->getBalance()!=$balance)
      {
        $entry->setBalance($balance);
        $entry->save();
      }
  }
  private function fetchEntriesAfterDate($date)
  {
      //this function returns all entries after the latest balforward on or before the date
      //that is, all records that might be affected with a change in a transaction on the said date.
  
      //fetch latest fwd before or on date
      $balfwd = Doctrine_Query::create()
        ->from('Stockentry e')
        ->where('e.stock_id = '.$this->getId())
        ->andWhere('e.is_fwd = true')
        ->andWhere('e.date <= "'.$date.'"')
        ->orderBy('date desc')
        ->fetchOne();
        
      if(!$balfwd)
      {
        $balfwd=$this->createFwdIfNone();
      }
  
      return Doctrine_Query::create()
        ->from('Stockentry e')
        ->where('e.date >= "'.$balfwd->getDate().'"')
        ->andWhere('e.stock_id = '.$this->getId())
        ->orderBy('date asc, is_fwd desc, id asc')
        ->execute();
  }
  public function getStockEntries()
  {
      return Doctrine_Query::create()
        ->from('Stockentry e')
        ->where('e.stock_id = '.$this->getId())
        ->orderBy('date desc, is_fwd asc, id desc')
        ->execute();
  }
  private function createFwdIfNone()
  {
    $count=count(
        Doctrine_Query::create()
        ->from('Stockentry e')
        ->where('e.stock_id = '.$this->getId())
        ->execute()
        );
    if($count==0)
    {
      $stockentry=new Stockentry();
      $stockentry->setStockId($this->getId());
      $stockentry->setDate($this->getDate());
      $stockentry->setQty(0);
      $stockentry->setBalance($this->getQty());
      $stockentry->setIsFwd(1);
      $stockentry->save();
      return $stockentry;
    }
  }
  public function createEntry($array)
  {
      $stockentry=new Stockentry();
      $stockentry->setStockId($this->getId());
      $stockentry->setDate($array["date"]);
      $stockentry->setQty($array["qty"]);
      $stockentry->setRefId($array["ref_id"]);
      $stockentry->setRefClass($array["ref_class"]);
      $stockentry->save();
      $this->calc();
      
      return $stockentry;
  }
  public function getCurrentQty()
  {
    $lastentry= Doctrine_Query::create()
      ->from('Stockentry e')
      ->where('e.stock_id = '.$this->getId())
      ->orderBy('date desc, is_fwd asc, id desc')
      ->fetchOne();
    if(!$lastentry)return 0;
    else return $lastentry->getBalance();
  }
}

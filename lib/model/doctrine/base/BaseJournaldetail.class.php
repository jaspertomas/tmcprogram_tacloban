<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Journaldetail', 'doctrine');

/**
 * BaseJournaldetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property date $date
 * @property string $name
 * @property string $description
 * @property integer $journal_id
 * @property Journal $Journal
 * 
 * @method integer       getId()          Returns the current record's "id" value
 * @method integer       getEventId()     Returns the current record's "event_id" value
 * @method date          getDate()        Returns the current record's "date" value
 * @method string        getName()        Returns the current record's "name" value
 * @method string        getDescription() Returns the current record's "description" value
 * @method integer       getJournalId()   Returns the current record's "journal_id" value
 * @method Journal       getJournal()     Returns the current record's "Journal" value
 * @method Journaldetail setId()          Sets the current record's "id" value
 * @method Journaldetail setEventId()     Sets the current record's "event_id" value
 * @method Journaldetail setDate()        Sets the current record's "date" value
 * @method Journaldetail setName()        Sets the current record's "name" value
 * @method Journaldetail setDescription() Sets the current record's "description" value
 * @method Journaldetail setJournalId()   Sets the current record's "journal_id" value
 * @method Journaldetail setJournal()     Sets the current record's "Journal" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJournaldetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('journaldetail');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('event_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('description', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('journal_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Journal', array(
             'local' => 'journal_id',
             'foreign' => 'id'));
    }
}
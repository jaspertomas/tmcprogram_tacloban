<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Company', 'doctrine');

/**
 * BaseCompany
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $first_name
 * @property string $last_name
 * @property string $address
 * @property string $city
 * @property string $state_
 * @property string $zip
 * @property integer $country_id
 * @property string $phone
 * @property string $email_address
 * @property integer $is_customer
 * @property integer $is_vendor
 * 
 * @method integer getId()            Returns the current record's "id" value
 * @method string  getName()          Returns the current record's "name" value
 * @method string  getFirstName()     Returns the current record's "first_name" value
 * @method string  getLastName()      Returns the current record's "last_name" value
 * @method string  getAddress()       Returns the current record's "address" value
 * @method string  getCity()          Returns the current record's "city" value
 * @method string  getState_()        Returns the current record's "state_" value
 * @method string  getZip()           Returns the current record's "zip" value
 * @method integer getCountryId()     Returns the current record's "country_id" value
 * @method string  getPhone()         Returns the current record's "phone" value
 * @method string  getEmailAddress()  Returns the current record's "email_address" value
 * @method integer getIsCustomer()    Returns the current record's "is_customer" value
 * @method integer getIsVendor()      Returns the current record's "is_vendor" value
 * @method Company setId()            Sets the current record's "id" value
 * @method Company setName()          Sets the current record's "name" value
 * @method Company setFirstName()     Sets the current record's "first_name" value
 * @method Company setLastName()      Sets the current record's "last_name" value
 * @method Company setAddress()       Sets the current record's "address" value
 * @method Company setCity()          Sets the current record's "city" value
 * @method Company setState_()        Sets the current record's "state_" value
 * @method Company setZip()           Sets the current record's "zip" value
 * @method Company setCountryId()     Sets the current record's "country_id" value
 * @method Company setPhone()         Sets the current record's "phone" value
 * @method Company setEmailAddress()  Sets the current record's "email_address" value
 * @method Company setIsCustomer()    Sets the current record's "is_customer" value
 * @method Company setIsVendor()      Sets the current record's "is_vendor" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCompany extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('company');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('first_name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('last_name', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('address', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('city', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('state_', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('zip', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('phone', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('email_address', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('is_customer', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_vendor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Period', 'doctrine');

/**
 * BasePeriod
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property date $startdate
 * @property date $enddate
 * @property integer $is_current
 * @property integer $previous_period_id
 * 
 * @method integer getId()                 Returns the current record's "id" value
 * @method string  getName()               Returns the current record's "name" value
 * @method date    getStartdate()          Returns the current record's "startdate" value
 * @method date    getEnddate()            Returns the current record's "enddate" value
 * @method integer getIsCurrent()          Returns the current record's "is_current" value
 * @method integer getPreviousPeriodId()   Returns the current record's "previous_period_id" value
 * @method Period  setId()                 Sets the current record's "id" value
 * @method Period  setName()               Sets the current record's "name" value
 * @method Period  setStartdate()          Sets the current record's "startdate" value
 * @method Period  setEnddate()            Sets the current record's "enddate" value
 * @method Period  setIsCurrent()          Sets the current record's "is_current" value
 * @method Period  setPreviousPeriodId()   Sets the current record's "previous_period_id" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePeriod extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('period');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('startdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('enddate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('is_current', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('previous_period_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
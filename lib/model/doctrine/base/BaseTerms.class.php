<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Terms', 'doctrine');

/**
 * BaseTerms
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $days
 * @property Doctrine_Collection $Invoice
 * @property Doctrine_Collection $Purchase
 * 
 * @method integer             getId()       Returns the current record's "id" value
 * @method string              getName()     Returns the current record's "name" value
 * @method integer             getDays()     Returns the current record's "days" value
 * @method Doctrine_Collection getInvoice()  Returns the current record's "Invoice" collection
 * @method Doctrine_Collection getPurchase() Returns the current record's "Purchase" collection
 * @method Terms               setId()       Sets the current record's "id" value
 * @method Terms               setName()     Sets the current record's "name" value
 * @method Terms               setDays()     Sets the current record's "days" value
 * @method Terms               setInvoice()  Sets the current record's "Invoice" collection
 * @method Terms               setPurchase() Sets the current record's "Purchase" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTerms extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('terms');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('days', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Invoice', array(
             'local' => 'id',
             'foreign' => 'terms_id'));

        $this->hasMany('Purchase', array(
             'local' => 'id',
             'foreign' => 'terms_id'));
    }
}
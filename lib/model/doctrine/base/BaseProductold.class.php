<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Productold', 'doctrine');

/**
 * BaseProductold
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $refnum
 * @property string $timestamp
 * @property string $invitemtype
 * @property string $desc
 * @property string $purchasedesc
 * @property string $accnt
 * @property string $assetaccnt
 * @property string $cogsaccnt
 * @property string $qnty
 * @property string $qnty1
 * @property string $price
 * @property string $cost
 * @property string $taxable
 * @property string $salestaxcode
 * @property string $paymeth
 * @property string $taxvend
 * @property string $prefvend
 * @property string $reorderpoint
 * @property string $extra
 * @property string $custfld1
 * @property string $custfld2
 * @property string $custfld3
 * @property string $custfld4
 * @property string $custfld5
 * @property string $dep_type
 * @property string $ispassedthru
 * @property string $hidden
 * @property string $delcount
 * @property string $useid
 * @property string $isnew
 * @property string $po_num
 * @property string $serialnum
 * @property string $warranty
 * @property string $location
 * @property string $vendor
 * @property string $assetdesc
 * @property string $saledate
 * @property string $saleexpense
 * @property string $notes
 * @property string $assetnum
 * @property string $costbasis
 * @property string $accumdepr
 * @property string $unrecbasis
 * @property string $purchasedate
 * 
 * @method integer    getId()           Returns the current record's "id" value
 * @method string     getName()         Returns the current record's "name" value
 * @method string     getRefnum()       Returns the current record's "refnum" value
 * @method string     getTimestamp()    Returns the current record's "timestamp" value
 * @method string     getInvitemtype()  Returns the current record's "invitemtype" value
 * @method string     getDesc()         Returns the current record's "desc" value
 * @method string     getPurchasedesc() Returns the current record's "purchasedesc" value
 * @method string     getAccnt()        Returns the current record's "accnt" value
 * @method string     getAssetaccnt()   Returns the current record's "assetaccnt" value
 * @method string     getCogsaccnt()    Returns the current record's "cogsaccnt" value
 * @method string     getQnty()         Returns the current record's "qnty" value
 * @method string     getQnty1()        Returns the current record's "qnty1" value
 * @method string     getPrice()        Returns the current record's "price" value
 * @method string     getCost()         Returns the current record's "cost" value
 * @method string     getTaxable()      Returns the current record's "taxable" value
 * @method string     getSalestaxcode() Returns the current record's "salestaxcode" value
 * @method string     getPaymeth()      Returns the current record's "paymeth" value
 * @method string     getTaxvend()      Returns the current record's "taxvend" value
 * @method string     getPrefvend()     Returns the current record's "prefvend" value
 * @method string     getReorderpoint() Returns the current record's "reorderpoint" value
 * @method string     getExtra()        Returns the current record's "extra" value
 * @method string     getCustfld1()     Returns the current record's "custfld1" value
 * @method string     getCustfld2()     Returns the current record's "custfld2" value
 * @method string     getCustfld3()     Returns the current record's "custfld3" value
 * @method string     getCustfld4()     Returns the current record's "custfld4" value
 * @method string     getCustfld5()     Returns the current record's "custfld5" value
 * @method string     getDepType()      Returns the current record's "dep_type" value
 * @method string     getIspassedthru() Returns the current record's "ispassedthru" value
 * @method string     getHidden()       Returns the current record's "hidden" value
 * @method string     getDelcount()     Returns the current record's "delcount" value
 * @method string     getUseid()        Returns the current record's "useid" value
 * @method string     getIsnew()        Returns the current record's "isnew" value
 * @method string     getPoNum()        Returns the current record's "po_num" value
 * @method string     getSerialnum()    Returns the current record's "serialnum" value
 * @method string     getWarranty()     Returns the current record's "warranty" value
 * @method string     getLocation()     Returns the current record's "location" value
 * @method string     getVendor()       Returns the current record's "vendor" value
 * @method string     getAssetdesc()    Returns the current record's "assetdesc" value
 * @method string     getSaledate()     Returns the current record's "saledate" value
 * @method string     getSaleexpense()  Returns the current record's "saleexpense" value
 * @method string     getNotes()        Returns the current record's "notes" value
 * @method string     getAssetnum()     Returns the current record's "assetnum" value
 * @method string     getCostbasis()    Returns the current record's "costbasis" value
 * @method string     getAccumdepr()    Returns the current record's "accumdepr" value
 * @method string     getUnrecbasis()   Returns the current record's "unrecbasis" value
 * @method string     getPurchasedate() Returns the current record's "purchasedate" value
 * @method Productold setId()           Sets the current record's "id" value
 * @method Productold setName()         Sets the current record's "name" value
 * @method Productold setRefnum()       Sets the current record's "refnum" value
 * @method Productold setTimestamp()    Sets the current record's "timestamp" value
 * @method Productold setInvitemtype()  Sets the current record's "invitemtype" value
 * @method Productold setDesc()         Sets the current record's "desc" value
 * @method Productold setPurchasedesc() Sets the current record's "purchasedesc" value
 * @method Productold setAccnt()        Sets the current record's "accnt" value
 * @method Productold setAssetaccnt()   Sets the current record's "assetaccnt" value
 * @method Productold setCogsaccnt()    Sets the current record's "cogsaccnt" value
 * @method Productold setQnty()         Sets the current record's "qnty" value
 * @method Productold setQnty1()        Sets the current record's "qnty1" value
 * @method Productold setPrice()        Sets the current record's "price" value
 * @method Productold setCost()         Sets the current record's "cost" value
 * @method Productold setTaxable()      Sets the current record's "taxable" value
 * @method Productold setSalestaxcode() Sets the current record's "salestaxcode" value
 * @method Productold setPaymeth()      Sets the current record's "paymeth" value
 * @method Productold setTaxvend()      Sets the current record's "taxvend" value
 * @method Productold setPrefvend()     Sets the current record's "prefvend" value
 * @method Productold setReorderpoint() Sets the current record's "reorderpoint" value
 * @method Productold setExtra()        Sets the current record's "extra" value
 * @method Productold setCustfld1()     Sets the current record's "custfld1" value
 * @method Productold setCustfld2()     Sets the current record's "custfld2" value
 * @method Productold setCustfld3()     Sets the current record's "custfld3" value
 * @method Productold setCustfld4()     Sets the current record's "custfld4" value
 * @method Productold setCustfld5()     Sets the current record's "custfld5" value
 * @method Productold setDepType()      Sets the current record's "dep_type" value
 * @method Productold setIspassedthru() Sets the current record's "ispassedthru" value
 * @method Productold setHidden()       Sets the current record's "hidden" value
 * @method Productold setDelcount()     Sets the current record's "delcount" value
 * @method Productold setUseid()        Sets the current record's "useid" value
 * @method Productold setIsnew()        Sets the current record's "isnew" value
 * @method Productold setPoNum()        Sets the current record's "po_num" value
 * @method Productold setSerialnum()    Sets the current record's "serialnum" value
 * @method Productold setWarranty()     Sets the current record's "warranty" value
 * @method Productold setLocation()     Sets the current record's "location" value
 * @method Productold setVendor()       Sets the current record's "vendor" value
 * @method Productold setAssetdesc()    Sets the current record's "assetdesc" value
 * @method Productold setSaledate()     Sets the current record's "saledate" value
 * @method Productold setSaleexpense()  Sets the current record's "saleexpense" value
 * @method Productold setNotes()        Sets the current record's "notes" value
 * @method Productold setAssetnum()     Sets the current record's "assetnum" value
 * @method Productold setCostbasis()    Sets the current record's "costbasis" value
 * @method Productold setAccumdepr()    Sets the current record's "accumdepr" value
 * @method Productold setUnrecbasis()   Sets the current record's "unrecbasis" value
 * @method Productold setPurchasedate() Sets the current record's "purchasedate" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductold extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('productold');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('refnum', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('timestamp', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('invitemtype', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('desc', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('purchasedesc', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('accnt', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('assetaccnt', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('cogsaccnt', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('qnty', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('qnty1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('price', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('cost', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('taxable', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('salestaxcode', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('paymeth', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('taxvend', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('prefvend', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('reorderpoint', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('extra', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('custfld1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('custfld2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('custfld3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('custfld4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('custfld5', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('dep_type', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('ispassedthru', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('hidden', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('delcount', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('useid', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('isnew', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('po_num', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('serialnum', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('warranty', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('location', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('vendor', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('assetdesc', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('saledate', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('saleexpense', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('notes', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('assetnum', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('costbasis', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('accumdepr', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('unrecbasis', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('purchasedate', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Productcategory', 'doctrine');

/**
 * BaseProductcategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $producttype_id
 * @property Producttype $Producttype
 * 
 * @method integer         getId()             Returns the current record's "id" value
 * @method string          getName()           Returns the current record's "name" value
 * @method integer         getProducttypeId()  Returns the current record's "producttype_id" value
 * @method Producttype     getProducttype()    Returns the current record's "Producttype" value
 * @method Productcategory setId()             Sets the current record's "id" value
 * @method Productcategory setName()           Sets the current record's "name" value
 * @method Productcategory setProducttypeId()  Sets the current record's "producttype_id" value
 * @method Productcategory setProducttype()    Sets the current record's "Producttype" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductcategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('productcategory');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('producttype_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Producttype', array(
             'local' => 'producttype_id',
             'foreign' => 'id'));
    }
}
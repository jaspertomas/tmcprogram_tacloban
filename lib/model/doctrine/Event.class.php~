<?php

/**
 * Event
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Event extends BaseEvent
{
  function getParent()
  {
     return Doctrine_Query::create()
        ->from($this->getParentClass().' e')
        ->where('e.id = '.$this->getParentId())
        ->fetchOne();
  }
  function getDetail($name)
  {
    switch($this->getType())
    {
      //invoice events
      case "BankExp":switch($name)
        {
          case "chequeamt":
            return -$this->getAmount();
          default: 
            return "";

        }break;
      case "ChequePay":switch($name)
        {
          case "chequeamt":
            return $this->getAmount();
          case "creditamt":
            return -$this->getAmount();
          case "status":
            return $this->getDetail1();
          default: 
            return "";

        }break;
      
      case "CashPay":switch($name)
        {
          case "cashamt":
            return $this->getAmount();
          case "creditamt":
            return -$this->getAmount();
          default: 
            return "";

        }break;

      //inventory events
      case "stockin":switch($name)
        {
          default: 
            return "";
        }break;
      case "stockout":switch($name)
        {
          default: 
            return "";
        }break;
      case "stocktrans":switch($name)
        {
          default: 
            return "";
        }break;
    }
  }
  function run()
  {
  }
  function getChildrenIds()
  {
    return explode(" ",$this->getChildrenId());
  }
  function getChildren($type=null)
  {
    if($this->getChildClass())
     $query=Doctrine_Query::create()
      ->from($this->getChildClass())
      ->whereIn('id', $this->getChildrenIds());
      
    if($type)
      $query->andWhere('type = "'.$type.'"');
      
    return $query->execute();
  }
  function cascadeDelete()
  {
    if($this->getChildClass())
     $children= Doctrine_Query::create()
      ->from($this->getChildClass())
      ->whereIn('id', $this->getChildrenIds())
      ->execute();
    foreach($children as $child)
      $child->delete();
      
    $this->delete();
  }
}

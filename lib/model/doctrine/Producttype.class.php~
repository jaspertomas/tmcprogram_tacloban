<?php

/**
 * Producttype
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Producttype extends BaseProducttype
{
  public function getParent()
  {
    return Doctrine_Query::create()
      ->from('Producttype f')
      ->where('f.id='.$this->getParentId())
      ->fetchOne();
  }
  public function getChildren()
  {
    return Doctrine_Query::create()
      ->from('Producttype f')
      ->where('f.parent_id='.$this->getId())
      ->andWhere('f.id!=1') //not root
      ->orderBy('f.priority')
      ->execute();
  }
  public function isHome()
  {
    return $this->getId()==1?true:false;
  }
  public function isRoot()
  {
    return $this->getId()==1?true:false;
  }
  public function renderContent()
  {
    return htmlentities($this->getContent());
  }
  public function getBreadcrumbs($action="view")
  {
    $array=array();
    $producttype=$this;
    
    if($this->getId()=="")
      $array[]=" > New Producttype";
    else
      $array[]=" > ".link_to($producttype->getname(),"producttype/".$action."?id=".$producttype->getId());
    
    while(!$producttype->isRoot())
    {
      $parent=$producttype->getParent();
      $array[]=" > ".link_to($parent->getname(),"producttype/".$action."?id=".$parent->getId());
      $producttype=$parent;
    }
    $array=array_reverse($array);

    return implode(" ",$array);
  }
  public function calc()
  {
	  $children=$this->getChildren();
	  $this->prioritize($children);
  }
	private function prioritize($children)
	{
	  $priority=2;
	  foreach($children as $child)
	  {
	    $child->setPriority($priority);
	    $child->save();
	    $priority+=2;
	  }
	}
  public function copyProducttype()
  {
  	  $newproducttype=$this->copy();
  	  $newproducttype->save();
  	  return $newproducttype;
  }
  function __toString()
  {
    if($this->getParentId()==null)
      return $this->getName();
    else
      return $this->getParent()->getName().">".$this->getName();
  }
  function getProducts()
  {
     return Doctrine_Query::create()
      ->from('Product p')
      ->orderBy('name asc')
      ->where('p.producttype_id ='.$this->getId())
      ->execute();
  }
}

<?php

/**
 * Journaldetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Journaldetail extends BaseJournaldetail
{
  public function calc()
  {/*
    if($this->getPrice()==0)$this->setDefaultPrice();
    if($this->getDiscrate()!="")
    {
      $discrate=$this->getDiscrate();
      $discrate=str_replace(","," ",$discrate);
      $discrate=str_replace(";"," ",$discrate);
      $discratearray=explode(" ",$this->getDiscrate());
      
      $gross=$this->getQty()*$this->getPrice();
      $total=$gross;
      foreach($discratearray as $rate)
        $total=$total*(1-($rate/100));
      $this->setTotal($total);
    }
    else
    {
      $discamt=$this->getDiscamt();
      $gross=$this->getQty()*$this->getPrice();
      $net=$gross-$discamt;
      $this->setTotal($net);
    }*/
  }/*
  public function setDefaultPrice()
  {
    $product=$this->getProduct();
    $this->setPrice($product->getPrice());
  }/*
  public function updateStockentry()
  {
    //fetch stockentry
    $stockentry=$this->getStockentry();
    
    //if none, create
    if(!$stockentry)
    {
      $stockentry=StockTable::createStockOut(SettingsTable::fetch("default_warehouse_id"),$this->getProductId(),$this->getQty(),$this->getJournal()->getDate(),$this);
    }
    //else, update if necessary
    else
    {
      $stock=$stockentry->getStock();
      
      //if data not the same
      if(
        $stockentry->getQty()!=-$this->getQty() or 
        $stock->getProductId()!=$this->getProductId() 
      )
      {
        //update and calc
        $stockentry->setQty(-$this->getQty());
        
				//if product id is different
				if($stock->getProductId()!=$this->getProductId())
				{
	        $newstock=StockTable::fetch($stock->getWarehouseId(), $this->getProductId());
	        $stockentry->setStockId($newstock->getId());
				}

        $stockentry->save();
	      $stock->calc($stockentry->getDate());
       
				//if product id is different
				if($stock->getProductId()!=$this->getProductId())
				{
		      $newstock->calc($stockentry->getDate());
				}
      }
    } 
  }/*
  public function getStockEntry()
  {
    return Doctrine_Query::create()
      ->from('Stockentry se')
      ->where('ref_class="Journaldetail"')
      ->andWhere('ref_id='.$this->getId())
      ->fetchOne();
  }*/
  public function cascadeDelete()
  {
    //$stockentry=$this->getStockentry();
    //if($stockentry)$stockentry->getStock()->deleteStockentry($stockentry);

    return $this->delete();
  }
}

CREATE TABLE account (id INT AUTO_INCREMENT, code VARCHAR(20) NOT NULL, name VARCHAR(150) NOT NULL, account_type_id INT NOT NULL, account_category_id INT, is_special TINYINT, currentqty DECIMAL(10, 2), date DATE, INDEX account_type_id_idx (account_type_id), INDEX account_category_id_idx (account_category_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE account_category (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, code VARCHAR(70) NOT NULL, account_type_id INT NOT NULL, parent_code VARCHAR(70), INDEX account_type_id_idx (account_type_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE account_type (id INT AUTO_INCREMENT, name VARCHAR(10) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE accountentry (id INT AUTO_INCREMENT, account_id INT NOT NULL, qty DECIMAL(18, 2) DEFAULT 0.00 NOT NULL, date DATE NOT NULL, balance DECIMAL(10, 2), ref_class VARCHAR(20), ref_id INT, priority INT, type VARCHAR(10), is_cancelled TINYINT DEFAULT '0', description VARCHAR(100), created_at DATETIME NOT NULL, INDEX account_id_idx (account_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE brand (id INT AUTO_INCREMENT, name VARCHAR(20) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE company (id INT AUTO_INCREMENT, name VARCHAR(20), first_name VARCHAR(20), last_name VARCHAR(30), address VARCHAR(30), city VARCHAR(30), state_ VARCHAR(30), zip VARCHAR(15), country_id INT, phone VARCHAR(15), email_address VARCHAR(50), is_customer TINYINT, is_vendor TINYINT, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE countries (country_id INT AUTO_INCREMENT, country VARCHAR(255), PRIMARY KEY(country_id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE customer (id INT AUTO_INCREMENT, name CHAR(60), address VARCHAR(100), phone1 CHAR(60), phone2 CHAR(60), faxnum CHAR(60), email CHAR(60), note CHAR(60), rep VARCHAR(60), repno VARCHAR(50), rep2 VARCHAR(60), rep2no VARCHAR(50), taxitem CHAR(60), notepad CHAR(60), salutation CHAR(60), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE employee (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, commission INT NOT NULL, is_technician TINYINT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE event (id INT AUTO_INCREMENT, type VARCHAR(20) NOT NULL, parent_class VARCHAR(20) NOT NULL, parent_id INT NOT NULL, parent_name VARCHAR(20), child_class VARCHAR(20), children_id VARCHAR(10), date DATE NOT NULL, amount DECIMAL(10, 2), detail1 VARCHAR(20), detail2 VARCHAR(20), detail3 VARCHAR(20), notes TEXT, is_cancelled TINYINT DEFAULT '0' NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE incheck (id INT AUTO_INCREMENT, checkno VARCHAR(30) NOT NULL, date DATE NOT NULL, datereceived DATE NOT NULL, status VARCHAR(7) NOT NULL, amount DECIMAL(10, 2) NOT NULL, customer_id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE invoice (id INT AUTO_INCREMENT, customer_id INT NOT NULL, customer_name VARCHAR(50), invno VARCHAR(20) NOT NULL, ponumber VARCHAR(20), notes TEXT, payonly DECIMAL(10, 2), total DECIMAL(10, 2), cheque VARCHAR(100), chequedate DATE, date DATE NOT NULL, duedate DATE, datepaid DATE, terms_id INT, salesman_id INT NOT NULL, technician_id INT, template_id INT, cash DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, chequeamt DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, credit DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, discrate VARCHAR(30), discamt DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, saletype VARCHAR(7) DEFAULT 'Cash' NOT NULL, status VARCHAR(9) DEFAULT 'Pending', dsrdeduction DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, balance DECIMAL(10, 2), chequedata VARCHAR(100), INDEX customer_id_idx (customer_id), INDEX salesman_id_idx (salesman_id), INDEX template_id_idx (template_id), INDEX terms_id_idx (terms_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE invoice_template (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE invoicedetail (id INT AUTO_INCREMENT, invoice_id INT, product_id INT NOT NULL, barcode VARCHAR(13), description VARCHAR(100), qty DECIMAL(10, 2), price DECIMAL(10, 2) DEFAULT 0.00, total DECIMAL(10, 2) DEFAULT 0.00, discrate VARCHAR(30) DEFAULT NULL, discamt DECIMAL(10, 2), unittotal DECIMAL(10, 2) DEFAULT 0.00, is_cancelled TINYINT DEFAULT '0' NOT NULL, INDEX product_id_idx (product_id), INDEX invoice_id_idx (invoice_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE journal (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, type VARCHAR(23), period_id INT NOT NULL, fund_id INT NOT NULL, accountno VARCHAR(100), priorityaccounts VARCHAR(100), author VARCHAR(100), preparedby1 VARCHAR(100), preparedby2 VARCHAR(100), certifiedby1 VARCHAR(100), certifiedby2 VARCHAR(100), is_approved TINYINT DEFAULT '0', PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE journal_entry (id INT AUTO_INCREMENT, date DATE, code VARCHAR(30) NOT NULL, resp_center_code VARCHAR(50), ref VARCHAR(50), description TEXT, debit DECIMAL(18, 2) DEFAULT 0.00, credit DECIMAL(18, 2) DEFAULT 0.00, is_balanced TINYINT DEFAULT '1', is_empty TINYINT DEFAULT '1', is_balance_forwarded TINYINT DEFAULT '0', period_id INT NOT NULL, fund_id INT NOT NULL, journal_id INT NOT NULL, payee VARCHAR(100), checkno VARCHAR(30), ptono VARCHAR(30), dvno VARCHAR(30), obrno VARCHAR(30), INDEX journal_id_idx (journal_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE journaldetail (id BIGINT AUTO_INCREMENT, event_id INT, date DATE, name VARCHAR(30) NOT NULL, description VARCHAR(30) NOT NULL, journal_id BIGINT NOT NULL, INDEX journal_id_idx (journal_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE links (id INT AUTO_INCREMENT, type VARCHAR(20) NOT NULL, url VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE notes (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, content TEXT, description VARCHAR(100), parent_id INT, status VARCHAR(6) DEFAULT 'Red', priority INT, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE outcheck (id INT AUTO_INCREMENT, checkno VARCHAR(30) NOT NULL, date DATE NOT NULL, datereceived DATE NOT NULL, status VARCHAR(7) NOT NULL, amount DECIMAL(10, 2) NOT NULL, supplier_id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE period (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, startdate DATE, enddate DATE, is_current TINYINT DEFAULT '1', previous_period_id BIGINT, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE pettycash (id INT AUTO_INCREMENT, pettycashno VARCHAR(10) NOT NULL, date DATE NOT NULL, amount DECIMAL(10, 2) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE pricelist (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, date DATE NOT NULL, vendor_id INT NOT NULL, INDEX vendor_id_idx (vendor_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE product (id INT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, brand_id INT, producttype_id INT NOT NULL, qty DECIMAL(10, 2), minbuyprice DECIMAL(10, 2) DEFAULT 0.00, maxbuyprice DECIMAL(10, 2) DEFAULT 0.00, minsellprice DECIMAL(10, 2) DEFAULT 0.00, maxsellprice DECIMAL(10, 2) DEFAULT 0.00, description TEXT, category1 VARCHAR(20), category2 VARCHAR(20), category3 VARCHAR(20), category4 VARCHAR(20), category5 VARCHAR(20), category6 VARCHAR(20), category7 VARCHAR(20), category8 VARCHAR(20), category9 VARCHAR(20), category10 VARCHAR(20), publish TINYINT, autocalcsellprice TINYINT DEFAULT '1', autocalcbuyprice TINYINT DEFAULT '1', monitored TINYINT DEFAULT '0' NOT NULL, barcode VARCHAR(13), is_service TINYINT DEFAULT '0' NOT NULL, INDEX brand_id_idx (brand_id), INDEX producttype_id_idx (producttype_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE productcategory (id INT AUTO_INCREMENT, name VARCHAR(20), producttype_id INT NOT NULL, INDEX producttype_id_idx (producttype_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE producttype (id INT AUTO_INCREMENT, name VARCHAR(20), description VARCHAR(100), parent_id INT, priority INT, category1 VARCHAR(30), category2 VARCHAR(30), category3 VARCHAR(30), category4 VARCHAR(30), category5 VARCHAR(30), category6 VARCHAR(20), category7 VARCHAR(20), category8 VARCHAR(20), category9 VARCHAR(20), category10 VARCHAR(20), path_ids VARCHAR(20), path VARCHAR(50), notes TEXT, status VARCHAR(6) DEFAULT 'Red', PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE purchase (id INT AUTO_INCREMENT, pono VARCHAR(10) NOT NULL, invno VARCHAR(20), total DECIMAL(10, 2), memo TEXT, tax DECIMAL(10, 2), vendor_id INT NOT NULL, vendor_name VARCHAR(50), terms_id INT, employee_id INT NOT NULL, template_id INT NOT NULL, date DATE NOT NULL, datereceived DATE, duedate DATE, vendor_invoice VARCHAR(25), discrate VARCHAR(30), discamt DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, status VARCHAR(9) DEFAULT 'Pending' NOT NULL, type VARCHAR(7) DEFAULT 'Account' NOT NULL, cash DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, cheque DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, credit DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, chequeno VARCHAR(20), chequedate DATE, balance DECIMAL(10, 2), chequedata VARCHAR(100), INDEX employee_id_idx (employee_id), INDEX template_id_idx (template_id), INDEX terms_id_idx (terms_id), INDEX vendor_id_idx (vendor_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE purchase_template (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE purchasedetail (id INT AUTO_INCREMENT, purchase_id INT NOT NULL, description VARCHAR(100), qty DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, price DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, sellprice DECIMAL(10, 2) DEFAULT 0.00, total DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, tax DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, product_id INT NOT NULL, barcode VARCHAR(13), discrate VARCHAR(30), discamt DECIMAL(10, 2), unittotal DECIMAL(10, 2) DEFAULT 0.00, is_cancelled TINYINT DEFAULT '0' NOT NULL, INDEX purchase_id_idx (purchase_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE quote (id INT AUTO_INCREMENT, date DATE NOT NULL, vendor_id INT NOT NULL, product_id INT NOT NULL, price DECIMAL(10, 2) NOT NULL, discrate VARCHAR(30) DEFAULT '' NOT NULL, discamt DECIMAL(10, 2) NOT NULL, ref_class VARCHAR(20) NOT NULL, ref_id INT NOT NULL, total DECIMAL(10, 2) NOT NULL, mine TINYINT DEFAULT '0' NOT NULL, is_cancelled TINYINT DEFAULT '0' NOT NULL, INDEX vendor_id_idx (vendor_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE settings (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, value VARCHAR(10) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE stock (id INT AUTO_INCREMENT, warehouse_id INT NOT NULL, product_id INT NOT NULL, currentqty DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, date DATE NOT NULL, quota DECIMAL(10, 2) DEFAULT 0.00 NOT NULL, INDEX warehouse_id_idx (warehouse_id), INDEX product_id_idx (product_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE stockentry (id INT AUTO_INCREMENT, date DATE NOT NULL, qty DECIMAL(10, 2) NOT NULL, balance DECIMAL(10, 2), stock_id INT NOT NULL, ref_class VARCHAR(20), ref_id INT, is_cancelled TINYINT DEFAULT '0' NOT NULL, priority INT, type VARCHAR(10), description VARCHAR(100), INDEX stock_id_idx (stock_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE subsidiary (id BIGINT AUTO_INCREMENT, code VARCHAR(30) NOT NULL, name VARCHAR(150) NOT NULL, account_code VARCHAR(10) NOT NULL, fund_id BIGINT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE task (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, subject_class VARCHAR(20), subject_id INT, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE template (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE terms (id INT AUTO_INCREMENT, name VARCHAR(20), days INT, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE vendor (id INT AUTO_INCREMENT, name CHAR(60), addr1 VARCHAR(200), addr2 VARCHAR(200), addr3 VARCHAR(200), vtype CHAR(60), cont1 CHAR(60), cont2 CHAR(60), phone1 TEXT, phone2 TEXT, faxnum CHAR(60), email CHAR(60), note TEXT, taxid CHAR(60), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE warehouse (id INT AUTO_INCREMENT, name VARCHAR(30) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL, username VARCHAR(128) NOT NULL, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT DEFAULT '1', is_super_admin TINYINT DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
ALTER TABLE account ADD CONSTRAINT account_account_type_id_account_type_id FOREIGN KEY (account_type_id) REFERENCES account_type(id);
ALTER TABLE account ADD CONSTRAINT account_account_category_id_account_category_id FOREIGN KEY (account_category_id) REFERENCES account_category(id);
ALTER TABLE account_category ADD CONSTRAINT account_category_account_type_id_account_type_id FOREIGN KEY (account_type_id) REFERENCES account_type(id);
ALTER TABLE accountentry ADD CONSTRAINT accountentry_account_id_account_id FOREIGN KEY (account_id) REFERENCES account(id);
ALTER TABLE invoice ADD CONSTRAINT invoice_terms_id_terms_id FOREIGN KEY (terms_id) REFERENCES terms(id);
ALTER TABLE invoice ADD CONSTRAINT invoice_template_id_invoice_template_id FOREIGN KEY (template_id) REFERENCES invoice_template(id);
ALTER TABLE invoice ADD CONSTRAINT invoice_salesman_id_employee_id FOREIGN KEY (salesman_id) REFERENCES employee(id);
ALTER TABLE invoice ADD CONSTRAINT invoice_customer_id_customer_id FOREIGN KEY (customer_id) REFERENCES customer(id);
ALTER TABLE invoicedetail ADD CONSTRAINT invoicedetail_product_id_product_id FOREIGN KEY (product_id) REFERENCES product(id);
ALTER TABLE invoicedetail ADD CONSTRAINT invoicedetail_invoice_id_invoice_id FOREIGN KEY (invoice_id) REFERENCES invoice(id);
ALTER TABLE journal_entry ADD CONSTRAINT journal_entry_journal_id_journal_id FOREIGN KEY (journal_id) REFERENCES journal(id);
ALTER TABLE journaldetail ADD CONSTRAINT journaldetail_journal_id_journal_id FOREIGN KEY (journal_id) REFERENCES journal(id);
ALTER TABLE pricelist ADD CONSTRAINT pricelist_vendor_id_vendor_id FOREIGN KEY (vendor_id) REFERENCES vendor(id);
ALTER TABLE product ADD CONSTRAINT product_producttype_id_producttype_id FOREIGN KEY (producttype_id) REFERENCES producttype(id);
ALTER TABLE product ADD CONSTRAINT product_brand_id_brand_id FOREIGN KEY (brand_id) REFERENCES brand(id);
ALTER TABLE productcategory ADD CONSTRAINT productcategory_producttype_id_producttype_id FOREIGN KEY (producttype_id) REFERENCES producttype(id);
ALTER TABLE purchase ADD CONSTRAINT purchase_vendor_id_vendor_id FOREIGN KEY (vendor_id) REFERENCES vendor(id);
ALTER TABLE purchase ADD CONSTRAINT purchase_terms_id_terms_id FOREIGN KEY (terms_id) REFERENCES terms(id);
ALTER TABLE purchase ADD CONSTRAINT purchase_template_id_purchase_template_id FOREIGN KEY (template_id) REFERENCES purchase_template(id);
ALTER TABLE purchase ADD CONSTRAINT purchase_employee_id_employee_id FOREIGN KEY (employee_id) REFERENCES employee(id);
ALTER TABLE purchasedetail ADD CONSTRAINT purchasedetail_purchase_id_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchase(id);
ALTER TABLE purchasedetail ADD CONSTRAINT purchasedetail_product_id_product_id FOREIGN KEY (product_id) REFERENCES product(id);
ALTER TABLE quote ADD CONSTRAINT quote_vendor_id_vendor_id FOREIGN KEY (vendor_id) REFERENCES vendor(id);
ALTER TABLE quote ADD CONSTRAINT quote_product_id_product_id FOREIGN KEY (product_id) REFERENCES product(id);
ALTER TABLE stock ADD CONSTRAINT stock_warehouse_id_warehouse_id FOREIGN KEY (warehouse_id) REFERENCES warehouse(id);
ALTER TABLE stock ADD CONSTRAINT stock_product_id_product_id FOREIGN KEY (product_id) REFERENCES product(id);
ALTER TABLE stockentry ADD CONSTRAINT stockentry_stock_id_stock_id FOREIGN KEY (stock_id) REFERENCES stock(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id);
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id);
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id);
